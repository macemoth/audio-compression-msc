CHAR_FREQ = [
    0,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 124, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1236, 1, 21, 9, 3, 1, 25, 15, 2, 2, 2, 1, 79, 19, 60, 1,
    15, 15, 8, 5, 4, 7, 5, 4, 4, 6, 3, 2, 1, 1, 1, 1,
    1, 24, 15, 22, 12, 15, 10, 9, 16, 16, 8, 6, 12, 23, 13, 11,
    14, 1, 14, 26, 29, 6, 3, 11, 1, 3, 1, 1, 1, 1, 1, 3,
    1, 491, 85, 173, 232, 744, 127, 110, 293, 418, 6, 39, 250, 139, 249, 446,
    111, 5, 388, 375, 531, 152, 57, 97, 12, 101, 5, 2, 1, 2, 3, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1,
]

MP3_FREQ = [
      0,
    12401, 589, 127, 62, 40, 30, 25, 19, 15,
    12, 10, 9, 7, 6, 5, 4, 3, 3,
    3, 3, 2, 2, 2, 2, 2, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 2, 2,
    2, 2, 2, 2, 2, 3, 3, 4, 5,
    5, 6, 9, 10, 12, 15, 19, 24, 30,
    40, 62, 127, 1571,
      1
]

MP3_DIFF_FREQ = [
    0,
    353, 86, 46, 29, 23, 19, 17, 15, 14, 13, 12, 11, 10,
    10, 9, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 5,
    5, 5, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
    2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1,
    1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
    2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
    6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 10, 11, 12,
    13, 14, 15, 17, 19, 23, 29, 46, 143,
        1]


CODE_VALUE = 16  # bits per codeword
MAX_VALUE = (1 << CODE_VALUE) - 1  # largest codeword
MAX_FREQ = 16383  # 2**14 -1

FIRST_QUARTER = MAX_VALUE // 4 + 1
HALF = 2 * FIRST_QUARTER
THIRD_QUARTER = 3 * FIRST_QUARTER

N_CHARS = 256
EOF = N_CHARS + 1
N_SYMBOLS = N_CHARS + 1

def get_model_params(model):
    if model:
        if model == "MP3":
            freq = MP3_FREQ.copy()
        if model =="MP3_DIFF":
            freq = MP3_DIFF_FREQ.copy()
        elif model == "CHAR":
            freq = CHAR_FREQ.copy()

        cumfreq = [0] * (N_SYMBOLS + 1)
        cumfreq[N_SYMBOLS] = 0
        for i in range(N_SYMBOLS, 0, -1):
            cumfreq[i - 1] = cumfreq[i] + freq[i]

    else:  # dynamic model
        freq = [1] * (N_SYMBOLS+1)
        cumfreq = [N_SYMBOLS - i for i in range(N_SYMBOLS+1)]

    ch2idx = {}
    idx2ch = {}
    for i in range(N_CHARS):
        ch2idx[i] = i + 1
        idx2ch[i + 1] = i

    return freq, cumfreq, ch2idx, idx2ch
